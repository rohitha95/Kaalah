{\rtf1\adeflang1025\ansi\ansicpg1252\uc1\adeff31507\deff0\stshfdbch31505\stshfloch31506\stshfhich31506\stshfbi31507\deflang1033\deflangfe1033\themelang1033\themelangfe0\themelangcs0{\fonttbl{\f0\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f34\fbidi \froman\fcharset0\fprq2{\*\panose 02040503050406030204}Cambria Math;}
{\f37\fbidi \fswiss\fcharset0\fprq2{\*\panose 020f0502020204030204}Calibri;}{\flomajor\f31500\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\fdbmajor\f31501\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\fhimajor\f31502\fbidi \fswiss\fcharset0\fprq2{\*\panose 020f0302020204030204}Calibri Light;}
{\fbimajor\f31503\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\flominor\f31504\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\fdbminor\f31505\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\fhiminor\f31506\fbidi \fswiss\fcharset0\fprq2{\*\panose 020f0502020204030204}Calibri;}
{\fbiminor\f31507\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f43\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\f44\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}
{\f46\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\f47\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\f48\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f49\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}
{\f50\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\f51\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\f413\fbidi \fswiss\fcharset238\fprq2 Calibri CE;}{\f414\fbidi \fswiss\fcharset204\fprq2 Calibri Cyr;}
{\f416\fbidi \fswiss\fcharset161\fprq2 Calibri Greek;}{\f417\fbidi \fswiss\fcharset162\fprq2 Calibri Tur;}{\f418\fbidi \fswiss\fcharset177\fprq2 Calibri (Hebrew);}{\f419\fbidi \fswiss\fcharset178\fprq2 Calibri (Arabic);}
{\f420\fbidi \fswiss\fcharset186\fprq2 Calibri Baltic;}{\f421\fbidi \fswiss\fcharset163\fprq2 Calibri (Vietnamese);}{\flomajor\f31508\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}
{\flomajor\f31509\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\flomajor\f31511\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\flomajor\f31512\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}
{\flomajor\f31513\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\flomajor\f31514\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\flomajor\f31515\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}
{\flomajor\f31516\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\fdbmajor\f31518\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\fdbmajor\f31519\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}
{\fdbmajor\f31521\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\fdbmajor\f31522\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\fdbmajor\f31523\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}
{\fdbmajor\f31524\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\fdbmajor\f31525\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\fdbmajor\f31526\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}
{\fhimajor\f31528\fbidi \fswiss\fcharset238\fprq2 Calibri Light CE;}{\fhimajor\f31529\fbidi \fswiss\fcharset204\fprq2 Calibri Light Cyr;}{\fhimajor\f31531\fbidi \fswiss\fcharset161\fprq2 Calibri Light Greek;}
{\fhimajor\f31532\fbidi \fswiss\fcharset162\fprq2 Calibri Light Tur;}{\fhimajor\f31533\fbidi \fswiss\fcharset177\fprq2 Calibri Light (Hebrew);}{\fhimajor\f31534\fbidi \fswiss\fcharset178\fprq2 Calibri Light (Arabic);}
{\fhimajor\f31535\fbidi \fswiss\fcharset186\fprq2 Calibri Light Baltic;}{\fhimajor\f31536\fbidi \fswiss\fcharset163\fprq2 Calibri Light (Vietnamese);}{\fbimajor\f31538\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}
{\fbimajor\f31539\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\fbimajor\f31541\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\fbimajor\f31542\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}
{\fbimajor\f31543\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\fbimajor\f31544\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\fbimajor\f31545\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}
{\fbimajor\f31546\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\flominor\f31548\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\flominor\f31549\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}
{\flominor\f31551\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\flominor\f31552\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\flominor\f31553\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}
{\flominor\f31554\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\flominor\f31555\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\flominor\f31556\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}
{\fdbminor\f31558\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\fdbminor\f31559\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\fdbminor\f31561\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}
{\fdbminor\f31562\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\fdbminor\f31563\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\fdbminor\f31564\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}
{\fdbminor\f31565\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\fdbminor\f31566\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\fhiminor\f31568\fbidi \fswiss\fcharset238\fprq2 Calibri CE;}
{\fhiminor\f31569\fbidi \fswiss\fcharset204\fprq2 Calibri Cyr;}{\fhiminor\f31571\fbidi \fswiss\fcharset161\fprq2 Calibri Greek;}{\fhiminor\f31572\fbidi \fswiss\fcharset162\fprq2 Calibri Tur;}
{\fhiminor\f31573\fbidi \fswiss\fcharset177\fprq2 Calibri (Hebrew);}{\fhiminor\f31574\fbidi \fswiss\fcharset178\fprq2 Calibri (Arabic);}{\fhiminor\f31575\fbidi \fswiss\fcharset186\fprq2 Calibri Baltic;}
{\fhiminor\f31576\fbidi \fswiss\fcharset163\fprq2 Calibri (Vietnamese);}{\fbiminor\f31578\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\fbiminor\f31579\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}
{\fbiminor\f31581\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\fbiminor\f31582\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\fbiminor\f31583\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}
{\fbiminor\f31584\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\fbiminor\f31585\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\fbiminor\f31586\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;
\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green0\blue0;\red0\green0\blue0;}{\*\defchp \fs22\loch\af31506\hich\af31506\dbch\af31505 }{\*\defpap 
\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 }\noqfpromote {\stylesheet{\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 
\af31507\afs22\alang1025 \ltrch\fcs0 \fs22\lang1033\langfe1033\loch\f31506\hich\af31506\dbch\af31505\cgrid\langnp1033\langfenp1033 \snext0 \sqformat \spriority0 Normal;}{\*\cs10 \additive \ssemihidden \sunhideused \spriority1 Default Paragraph Font;}{\*
\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\trcbpat1\trcfpat1\tblind0\tblindtype3\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv \ql \li0\ri0\sa160\sl259\slmult1
\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 \fs22\lang1033\langfe1033\loch\f31506\hich\af31506\dbch\af31505\cgrid\langnp1033\langfenp1033 \snext11 \ssemihidden \sunhideused 
Normal Table;}{\s15\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 \fs22\lang1033\langfe1033\loch\f31506\hich\af31506\dbch\af31505\cgrid\langnp1033\langfenp1033 
\snext15 \sqformat \spriority1 \styrsid402365 No Spacing;}}{\*\rsidtbl \rsid402365\rsid1387705\rsid13725727\rsid15278690}{\mmathPr\mmathFont34\mbrkBin0\mbrkBinSub0\msmallFrac0\mdispDef1\mlMargin0\mrMargin0\mdefJc1\mwrapIndent1440\mintLim0\mnaryLim1}{\info
{\author Bandarupalli, Rohitha}{\operator Bandarupalli, Rohitha}{\creatim\yr2018\mo11\dy26\hr16\min10}{\revtim\yr2018\mo11\dy26\hr16\min10}{\version2}{\edmins1}{\nofpages18}{\nofwords2691}{\nofchars15342}{\nofcharsws17998}{\vern93}}{\*\xmlnstbl {\xmlns1 h
ttp://schemas.microsoft.com/office/word/2003/wordml}}\paperw12240\paperh15840\margl1440\margr1440\margt1440\margb1440\gutter0\ltrsect 
\widowctrl\ftnbj\aenddoc\trackmoves0\trackformatting1\donotembedsysfont0\relyonvml0\donotembedlingdata1\grfdocevents0\validatexml0\showplaceholdtext0\ignoremixedcontent0\saveinvalidxml0\showxmlerrors0\horzdoc\dghspace120\dgvspace120\dghorigin1701
\dgvorigin1984\dghshow0\dgvshow3\jcompress\viewkind1\viewscale100\rsidroot13725727 \fet0{\*\wgrffmtfilter 2450}\ilfomacatclnup0\ltrpar \sectd \ltrsect\linex0\sectdefaultcl\sftnbj {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2
\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6
\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang 
{\pntxtb (}{\pntxta )}}\pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid402365 \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 
\fs22\lang1033\langfe1033\loch\af31506\hich\af31506\dbch\af31505\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid13725727\charrsid13725727 \hich\af31506\dbch\af31505\loch\f31506 Game.h}{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\insrsid3361995\charrsid13725727 
\par }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid13725727\charrsid13725727 \hich\af31506\dbch\af31505\loch\f31506 #ifndef GAME_H
\par \hich\af31506\dbch\af31505\loch\f31506 #define GAME_H
\par 
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 class Game
\par \{
\par \hich\af31506\dbch\af31505\loch\f31506     public:
\par \hich\af31506\dbch\af31505\loch\f31506         Game();
\par 
\par \hich\af31506\dbch\af31505\loch\f31506         virtual ~Game();
\par \hich\af31506\dbch\af31505\loch\f31506         static const int size=14;
\par \hich\af31506\dbch\af31505\loch\f31506         int board[size];
\par \hich\af31506\dbch\af31505\loch\f31506         int player, pit;
\par \hich\af31506\dbch\af31505\loch\f31506         bool extra_move=false;
\par 
\par 
\par 
\par 
\par \hich\af31506\dbch\af31505\loch\f31506         void start();
\par \hich\af31506\dbch\af31505\loch\f31506         void display();
\par \hich\af31506\dbch\af31505\loch\f31506         void make_move();
\par \hich\af31506\dbch\af31505\loch\f31506         int get_stones();
\par \hich\af31506\dbch\af31505\loch\f31506         void validate_pit();
\par \hich\af31506\dbch\af31505\loch\f31506         void Adjust_pit_value();
\par \hich\af31506\dbch\af31505\loch\f31506         bool opponent_store();
\par \hich\af31506\dbch\af31505\loch\f31506         void player_turn();
\par \hich\af31506\dbch\af31505\loch\f31506   \hich\af31506\dbch\af31505\loch\f31506       bool is_game_ends();
\par \hich\af31506\dbch\af31505\loch\f31506         int who_wins();
\par \hich\af31506\dbch\af31505\loch\f31506         void capture_across(int);
\par \hich\af31506\dbch\af31505\loch\f31506         //int computer_move(int [],int);
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     protected:
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     private:
\par \}\hich\af31506\dbch\af31505\loch\f31506 ;
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 #endif // GAME_H}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid13725727 
\par }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid13725727\charrsid13725727 \hich\af31506\dbch\af31505\loch\f31506 Game.c\hich\af31506\dbch\af31505\loch\f31506 pp}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid13725727 
\par }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid13725727 \hich\af31506\dbch\af31505\loch\f31506 #include "Game.h"
\par \hich\af31506\dbch\af31505\loch\f31506 #include<iostream>
\par \hich\af31506\dbch\af31505\loch\f31506 #include<iomanip>
\par \hich\af31506\dbch\af31505\loch\f31506 #include<string>
\par \hich\af31506\dbch\af31505\loch\f31506 using namespace std;
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 Game::Game()
\par \{
\par \hich\af31506\dbch\af31505\loch\f31506     //ctor
\par \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 Game::~Game()
\par \{
\par \hich\af31506\dbch\af31505\loch\f31506     //dtor
\par \}
\par 
\par 
\par 
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 void Game::display()\{
\par \hich\af31506\dbch\af31505\loch\f31506     cout<<endl<<endl;
\par \hich\af31506\dbch\af31505\loch\f31506     string s=" ";
\par \hich\af31506\dbch\af31505\loch\f31506     cout<<setw(15)<<right<<"Player 2";
\par \hich\af31506\dbch\af31505\loch\f31506     cout<<setw(5)<<s;
\par \hich\af31506\dbch\af31505\loch\f31506     for (int i=size-1; i>7;i--)
\par \hich\af31506\dbch\af31505\loch\f31506         cout<<setw(5)<<board[i]<<" ";
\par \hich\af31506\dbch\af31505\loch\f31506     cout<<endl<<setw(15)<<right<<"store 2";
\par \hich\af31506\dbch\af31505\loch\f31506     cout<<setw(5)<<right<<board[0]<<setw(40)<<board[7]<<setw(10)<<"store 1"<<endl;
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     cout<<setw(20)<<s;
\par \hich\af31506\dbch\af31505\loch\f31506     for (int i=1; i<7;i++)
\par \hich\af31506\dbch\af31505\loch\f31506         \hich\af31506\dbch\af31505\loch\f31506 cout<<setw(5)<<board[i]<<" ";
\par \hich\af31506\dbch\af31505\loch\f31506     cout<<setw(15)<<right<<"Player 1";
\par \hich\af31506\dbch\af31505\loch\f31506     cout<<endl<<endl;
\par \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 bool Game::is_game_ends()\{
\par \hich\af31506\dbch\af31505\loch\f31506     int count=0;
\par \hich\af31506\dbch\af31505\loch\f31506     int n,j;
\par \hich\af31506\dbch\af31505\loch\f31506     if (player==1)\{
\par \hich\af31506\dbch\af31505\loch\f31506        j=1;
\par \hich\af31506\dbch\af31505\loch\f31506        n=7;
\par \hich\af31506\dbch\af31505\loch\f31506     \}else \{
\par \hich\af31506\dbch\af31505\loch\f31506         j=8;
\par \hich\af31506\dbch\af31505\loch\f31506         n=size;
\par \hich\af31506\dbch\af31505\loch\f31506     \}
\par \hich\af31506\dbch\af31505\loch\f31506     for (int i\hich\af31506\dbch\af31505\loch\f31506 =j;i<n; i++)\{
\par \hich\af31506\dbch\af31505\loch\f31506         if(board[i]==0)
\par \hich\af31506\dbch\af31505\loch\f31506             count++;
\par \hich\af31506\dbch\af31505\loch\f31506     \}
\par \hich\af31506\dbch\af31505\loch\f31506     if(count==6 )
\par \hich\af31506\dbch\af31505\loch\f31506         return true;
\par \hich\af31506\dbch\af31505\loch\f31506     return false;
\par \}
\par \hich\af31506\dbch\af31505\loch\f31506 int Game::who_wins()\{
\par \hich\af31506\dbch\af31505\loch\f31506     int store1=board[7], store2=board[0];
\par \hich\af31506\dbch\af31505\loch\f31506     int winner=12;
\par \hich\af31506\dbch\af31505\loch\f31506     for(int i=1;i<7;i++) \{
\par \hich\af31506\dbch\af31505\loch\f31506         store1+=board[i];
\par \hich\af31506\dbch\af31505\loch\f31506         board[i]=0;
\par \hich\af31506\dbch\af31505\loch\f31506         store2+=board[i+7];
\par \hich\af31506\dbch\af31505\loch\f31506         board[i+7]=0;
\par \hich\af31506\dbch\af31505\loch\f31506     \}
\par \hich\af31506\dbch\af31505\loch\f31506     if (store1==store2)
\par \hich\af31506\dbch\af31505\loch\f31506         cout<<"Both Wins the game"<<endl;
\par \hich\af31506\dbch\af31505\loch\f31506     else if (store1>store2)
\par \hich\af31506\dbch\af31505\loch\f31506         winner=1;
\par \hich\af31506\dbch\af31505\loch\f31506     else
\par \hich\af31506\dbch\af31505\loch\f31506       \hich\af31506\dbch\af31505\loch\f31506   winner=2;
\par \hich\af31506\dbch\af31505\loch\f31506     return winner;
\par 
\par \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 void Game::start()\{
\par \hich\af31506\dbch\af31505\loch\f31506     for (int i=0;i<size;i++)\{
\par \hich\af31506\dbch\af31505\loch\f31506         if (i==0 || i==7)
\par \hich\af31506\dbch\af31505\loch\f31506             board[i]=0;
\par \hich\af31506\dbch\af31505\loch\f31506         else
\par \hich\af31506\dbch\af31505\loch\f31506             board[i]=6;
\par \hich\af31506\dbch\af31505\loch\f31506     \}
\par \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 void Game::Adjust_pit_value()\{
\par \hich\af31506\dbch\af31505\loch\f31506  if (player==2)
\par \hich\af31506\dbch\af31505\loch\f31506         pit=size-pit;
\par 
\par \hich\af31506\dbch\af31505\loch\f31506  \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 int Game::get_stones()\{
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     return board[pit];
\par \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 bool Game::opponent_store()\{
\par \hich\af31506\dbch\af31505\loch\f31506     if ((player==1 && pit ==0) || (player==2 && pit==7))
\par \hich\af31506\dbch\af31505\loch\f31506         return true;
\par \hich\af31506\dbch\af31505\loch\f31506     return false;
\par \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 void Game::validate_pit()\{
\par \hich\af31506\dbch\af31505\loch\f31506    if (player==2) \{
\par \hich\af31506\dbch\af31505\loch\f31506    \hich\af31506\dbch\af31505\loch\f31506  while ( pit<=0 || pit>=7 )\{
\par \hich\af31506\dbch\af31505\loch\f31506         cout<<"not a valid pit. Pick another pit (1-6):";
\par \hich\af31506\dbch\af31505\loch\f31506         cin>>pit;
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     \}
\par \hich\af31506\dbch\af31505\loch\f31506      Adjust_pit_value();
\par \hich\af31506\dbch\af31505\loch\f31506      while (get_stones()==0) \{
\par \hich\af31506\dbch\af31505\loch\f31506         cout<<" No stones in the pit, pick another pit (1-6) :";
\par \hich\af31506\dbch\af31505\loch\f31506         cin>>pit;
\par \hich\af31506\dbch\af31505\loch\f31506      \}
\par \}
\par \hich\af31506\dbch\af31505\loch\f31506       \tab else if (player==1) \{
\par \tab \tab \hich\af31506\dbch\af31505\loch\f31506 if (get_stones()==0) \{
\par \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506 pit++;
\par 
\par \tab \tab \}
\par 
\par \}
\par 
\par \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 void Game::player_turn()\{
\par \hich\af31506\dbch\af31505\loch\f31506     if(player==1 && extra_move==false)
\par \hich\af31506\dbch\af31505\loch\f31506         player=2;
\par \hich\af31506\dbch\af31505\loch\f31506     else if(player==2 && extra_move==false)
\par \hich\af31506\dbch\af31505\loch\f31506         player=1;
\par \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 void \hich\af31506\dbch\af31505\loch\f31506 Game::capture_across(int pos) \{
\par 
\par \hich\af31506\dbch\af31505\loch\f31506         if(player==1 && pos>0 && pos<7 && board[pos]==1) \{
\par \hich\af31506\dbch\af31505\loch\f31506             board[7]+=1+board[size-pos];
\par \hich\af31506\dbch\af31505\loch\f31506             board[size-pos]=0;
\par \hich\af31506\dbch\af31505\loch\f31506             board[pos]=0;
\par \hich\af31506\dbch\af31505\loch\f31506             extra_move=true;
\par \hich\af31506\dbch\af31505\loch\f31506         \}
\par \hich\af31506\dbch\af31505\loch\f31506         else if (player==2 \hich\af31506\dbch\af31505\loch\f31506 && pos>7 && pos<size && board[pos]==1) \{
\par 
\par \hich\af31506\dbch\af31505\loch\f31506             board[0]+=1+board[size-pos];
\par \hich\af31506\dbch\af31505\loch\f31506             board[size-pos]=0;
\par \hich\af31506\dbch\af31505\loch\f31506             board[pos]=0;
\par \hich\af31506\dbch\af31505\loch\f31506             extra_move=true;
\par \hich\af31506\dbch\af31505\loch\f31506         \}
\par \hich\af31506\dbch\af31505\loch\f31506         else
\par \hich\af31506\dbch\af31505\loch\f31506             extra_move=false;
\par \hich\af31506\dbch\af31505\loch\f31506     \}
\par 
\par 
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 void Game::make_move() \{
\par \hich\af31506\dbch\af31505\loch\f31506    // validate_pit();
\par \hich\af31506\dbch\af31505\loch\f31506     Adjust_pit_value();
\par \hich\af31506\dbch\af31505\loch\f31506     int stones=get_stones();
\par \hich\af31506\dbch\af31505\loch\f31506     board[pit]=0;
\par 
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     while(stones!=0)\{
\par 
\par \hich\af31506\dbch\af31505\loch\f31506         pit++;
\par \hich\af31506\dbch\af31505\loch\f31506         if ( pit == size)
\par \hich\af31506\dbch\af31505\loch\f31506             pit=0;
\par \hich\af31506\dbch\af31505\loch\f31506         //cout<<"pit value "<<pit<<endl;
\par \hich\af31506\dbch\af31505\loch\f31506         if (\hich\af31506\dbch\af31505\loch\f31506 opponent_store())
\par \hich\af31506\dbch\af31505\loch\f31506             pit++;
\par 
\par \hich\af31506\dbch\af31505\loch\f31506         board[pit]+=1;
\par \hich\af31506\dbch\af31505\loch\f31506         if(stones==1)
\par \hich\af31506\dbch\af31505\loch\f31506             capture_across(pit);
\par \hich\af31506\dbch\af31505\loch\f31506         stones--;
\par \hich\af31506\dbch\af31505\loch\f31506             //display();
\par \hich\af31506\dbch\af31505\loch\f31506             //cout<<"stones "<<stones<<endl;
\par 
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     \}
\par 
\par 
\par \}}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid13725727 
\par }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid13725727\charrsid13725727 \hich\af31506\dbch\af31505\loch\f31506 A\hich\af31506\dbch\af31505\loch\f31506 lgorithms.\hich\af31506\dbch\af31505\loch\f31506 h}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid13725727 

\par }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid13725727 \hich\af31506\dbch\af31505\loch\f31506 #ifndef ALGORITHMS_H
\par \hich\af31506\dbch\af31505\loch\f31506 #define ALGORITHMS_H
\par \hich\af31506\dbch\af31505\loch\f31506 #include<string>
\par \hich\af31506\dbch\af31505\loch\f31506 #include "Game.h"
\par \hich\af31506\dbch\af31505\loch\f31506 #include<vector>
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 using namespace std;
\par 
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 class algorithms
\par \{
\par \hich\af31506\dbch\af31505\loch\f31506     public:
\par \hich\af31506\dbch\af31505\loch\f31506         struct result\{
\par \hich\af31506\dbch\af31505\loch\f31506             int value;
\par \hich\af31506\dbch\af31505\loch\f31506             int path;
\par \hich\af31506\dbch\af31505\loch\f31506         \};
\par \tab \hich\af31506\dbch\af31505\loch\f31506 vector<result> arrayList;
\par \tab \hich\af31506\dbch\af31505\loch\f31506 int currDepth=0;
\par \tab \hich\af31506\dbch\af31505\loch\f31506 int no_of_nodes=0;
\par 
\par \hich\af31506\dbch\af31505\loch\f31506         static const int cut_off_depth=1;
\par \hich\af31506\dbch\af31505\loch\f31506         result r;
\par \hich\af31506\dbch\af31505\loch\f31506        // Game list[6];
\par 
\par \hich\af31506\dbch\af31505\loch\f31506         algorithms();
\par \hich\af31506\dbch\af31505\loch\f31506         virtual ~algorithms();
\par \hich\af31506\dbch\af31505\loch\f31506         vector<Game> move_generator(int [], int);
\par \hich\af31506\dbch\af31505\loch\f31506         bool deep_enough(int[],int);
\par \hich\af31506\dbch\af31505\loch\f31506         int static_evaluation_function(int[],int);
\par \hich\af31506\dbch\af31505\loch\f31506         result minimaxAB(int[],int,int,int,int);
\par \hich\af31506\dbch\af31505\loch\f31506         result minimaxAB1(int[],int,int,int,int);
\par \tab \hich\af31506\dbch\af31505\loch\f31506 int opposite(int);
\par \tab \hich\af31506\dbch\af31505\loch\f31506 int initialize(int [],int);
\par \tab \hich\af31506\dbch\af31505\loch\f31506 int alphaBetaSearch(Game);
\par \tab \hich\af31506\dbch\af31505\loch\f31506 int getActionBoard(int);
\par \tab \hich\af31506\dbch\af31505\loch\f31506 int minVal(Game,int,int);
\par \tab \hich\af31506\dbch\af31505\loch\f31506 int maxVal(Game, int,int);
\par \tab \hich\af31506\dbch\af31505\loch\f31506 int evaluation_function21(int[],int);
\par \tab \hich\af31506\dbch\af31505\loch\f31506 int evaluation_function2(Game,int);
\par \tab \hich\af31506\dbch\af31505\loch\f31506 bool deep_enoughS(int );
\par \tab \hich\af31506\dbch\af31505\loch\f31506 int node_count\hich\af31506\dbch\af31505\loch\f31506 ();
\par \tab \hich\af31506\dbch\af31505\loch\f31506 void node_count1(int);
\par 
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     protected:
\par \hich\af31506\dbch\af31505\loch\f31506     private:
\par \}\hich\af31506\dbch\af31505\loch\f31506 ;
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 #endif // ALGORITHMS_H}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid13725727 
\par 
\par }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid13725727\charrsid13725727 \hich\af31506\dbch\af31505\loch\f31506 A\hich\af31506\dbch\af31505\loch\f31506 lgorithms.\hich\af31506\dbch\af31505\loch\f31506 cpp}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid13725727 

\par }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid13725727 \hich\af31506\dbch\af31505\loch\f31506 #include "algorithms.h"
\par \hich\af31506\dbch\af31505\loch\f31506 #include<vector>
\par \hich\af31506\dbch\af31505\loch\f31506 #include "Game.h"
\par \hich\af31506\dbch\af31505\loch\f31506 #include<iostream>
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 using namespace std;
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 algorithms::algorithms()
\par \{
\par \hich\af31506\dbch\af31505\loch\f31506     //ctor
\par \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 a\hich\af31506\dbch\af31505\loch\f31506 lgorithms::~algorithms()
\par \{
\par \hich\af31506\dbch\af31505\loch\f31506     //dtor
\par \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 vector<Game> algorithms::move_generator(int arr[], int player_no) \{
\par \hich\af31506\dbch\af31505\loch\f31506     Game computer[6];
\par \hich\af31506\dbch\af31505\loch\f31506     vector<Game> list;
\par \hich\af31506\dbch\af31505\loch\f31506    // cout<<"test"<<endl;
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     int k;
\par \hich\af31506\dbch\af31505\loch\f31506     int store[6];
\par \hich\af31506\dbch\af31505\loch\f31506     if (player_no==1)\{
\par \hich\af31506\dbch\af31505\loch\f31506         k=1;
\par \hich\af31506\dbch\af31505\loch\f31506        // i=0;
\par \hich\af31506\dbch\af31505\loch\f31506     \}else if(player_no==2)\{
\par \hich\af31506\dbch\af31505\loch\f31506         k=13;
\par \hich\af31506\dbch\af31505\loch\f31506        // i=;
\par \hich\af31506\dbch\af31505\loch\f31506     \}
\par \hich\af31506\dbch\af31505\loch\f31506    int i=0;
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     while ( i<6 )\{
\par \hich\af31506\dbch\af31505\loch\f31506             for (int j=0;j<14;j++)
\par \hich\af31506\dbch\af31505\loch\f31506                 computer[i].board[j]=arr[j];
\par \hich\af31506\dbch\af31505\loch\f31506             computer[i].player=player_no;
\par \hich\af31506\dbch\af31505\loch\f31506             \hich\af31506\dbch\af31505\loch\f31506 computer[i].pit=i+1;
\par \tab \hich\af31506\dbch\af31505\loch\f31506    // cout<<"test for player"<<player_no<<endl;
\par \hich\af31506\dbch\af31505\loch\f31506             if(computer[i].board[k]==0)\{
\par \hich\af31506\dbch\af31505\loch\f31506                 store[i]=-100;
\par \hich\af31506\dbch\af31505\loch\f31506             \}else\{
\par \hich\af31506\dbch\af31505\loch\f31506                 computer[i].make_move();
\par \tab \hich\af31506\dbch\af31505\loch\f31506 /*\tab do \{
\par \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506 computer[i].make_move();
\par \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506 computer[i].player_turn();
\par \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506 cout<<"player::: "<<computer[i].player<<endl;
\par \tab \tab \}\hich\af31506\dbch\af31505\loch\f31506 while(computer[i].player==player_no);*/
\par \hich\af31506\dbch\af31505\loch\f31506                 store[i]=computer[i].board[7]-computer[i].board[0];
\par \tab \tab \hich\af31506\dbch\af31505\loch\f31506 computer[i].pit=i+1;
\par \tab \hich\af31506\dbch\af31505\loch\f31506 //\tab cout<<"i value: "<<i<<endl<<endl;
\par \tab \tab \hich\af31506\dbch\af31505\loch\f31506 //c\hich\af31506\dbch\af31505\loch\f31506 omputer[i].display();
\par \hich\af31506\dbch\af31505\loch\f31506                 list.push_back(computer[i]);
\par 
\par \hich\af31506\dbch\af31505\loch\f31506             \}
\par \hich\af31506\dbch\af31505\loch\f31506             //cout<<" Evaluated value at pit "<<i+1<<" : "<<store[i]<<endl;
\par \tab \hich\af31506\dbch\af31505\loch\f31506   i++;
\par \tab \hich\af31506\dbch\af31505\loch\f31506 if (player_no==2)
\par \tab \tab \hich\af31506\dbch\af31505\loch\f31506 k--;
\par \tab \hich\af31506\dbch\af31505\loch\f31506 else
\par \tab \tab \hich\af31506\dbch\af31505\loch\f31506 k++;
\par \hich\af31506\dbch\af31505\loch\f31506     \}
\par \hich\af31506\dbch\af31505\loch\f31506     //cout<<"tested"<<endl;
\par \hich\af31506\dbch\af31505\loch\f31506     return list;
\par 
\par 
\par \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 int algorithms::initialize(int b[],int p) \{
\par \tab \hich\af31506\dbch\af31505\loch\f31506 result r;
\par 
\par \hich\af31506\dbch\af31505\loch\f31506         r=minimaxAB(b,0,p,100,-100);
\par 
\par 
\par 
\par \tab \hich\af31506\dbch\af31505\loch\f31506 return r.path;
\par \}
\par \hich\af31506\dbch\af31505\loch\f31506 // Evaluation function 1
\par \hich\af31506\dbch\af31505\loch\f31506 int algorithms::static_evaluation_function(int arr[], int player) \{
\par \hich\af31506\dbch\af31505\loch\f31506     int value;
\par \hich\af31506\dbch\af31505\loch\f31506     if (player==1)
\par \hich\af31506\dbch\af31505\loch\f31506         value=arr[7]-arr[0];
\par \hich\af31506\dbch\af31505\loch\f31506     else if (player==2)
\par \hich\af31506\dbch\af31505\loch\f31506         value=arr[0]-arr[7];
\par \hich\af31506\dbch\af31505\loch\f31506     return value;
\par 
\par 
\par \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 // Evaluation function2
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 int algorithms::evaluati\hich\af31506\dbch\af31505\loch\f31506 on_function2(Game g,int player)\{
\par 
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     int val;
\par \hich\af31506\dbch\af31505\loch\f31506     if (player==1)
\par \hich\af31506\dbch\af31505\loch\f31506         val=(g.board[0]+2)/g.board[7];
\par \hich\af31506\dbch\af31505\loch\f31506     if (player==2)
\par \hich\af31506\dbch\af31505\loch\f31506         val=(g.board[7]+2)/g.board[0];
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     //cout<<val<<endl;
\par \hich\af31506\dbch\af31505\loch\f31506     return val;
\par 
\par 
\par \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 int algorithms::evaluation_function21(int g[],int player)\{
\par \hich\af31506\dbch\af31505\loch\f31506     int val;
\par \hich\af31506\dbch\af31505\loch\f31506     if (player==1)
\par \hich\af31506\dbch\af31505\loch\f31506         val=g[0]+2/g[7]+2;
\par \hich\af31506\dbch\af31505\loch\f31506     if (player==2)
\par \hich\af31506\dbch\af31505\loch\f31506         val=g[7]+2/g[0]+2;
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     //cout<<val<<endl;
\par \hich\af31506\dbch\af31505\loch\f31506     return val;
\par 
\par 
\par \}
\par \hich\af31506\dbch\af31505\loch\f31506 bool algorithms::deep_enough(int arr[], int dept\hich\af31506\dbch\af31505\loch\f31506 h) \{
\par \hich\af31506\dbch\af31505\loch\f31506     if (depth>=cut_off_depth)
\par \hich\af31506\dbch\af31505\loch\f31506         return true;
\par \hich\af31506\dbch\af31505\loch\f31506     return false;
\par \}
\par \hich\af31506\dbch\af31505\loch\f31506 int algorithms::opposite(int player) \{
\par \tab \hich\af31506\dbch\af31505\loch\f31506 if(player==1)
\par \tab \tab \hich\af31506\dbch\af31505\loch\f31506 return 2;
\par \tab \hich\af31506\dbch\af31505\loch\f31506 return 1;
\par 
\par \}
\par \hich\af31506\dbch\af31505\loch\f31506 void algorithms::node_count1(int n)\{
\par \hich\af31506\dbch\af31505\loch\f31506     this->no_of_nodes+=n;
\par \hich\af31506\dbch\af31505\loch\f31506     //cout<<"node: "<<node_count()<<e\hich\af31506\dbch\af31505\loch\f31506 ndl;
\par \}
\par \hich\af31506\dbch\af31505\loch\f31506 int algorithms::node_count()\{
\par \hich\af31506\dbch\af31505\loch\f31506  //cout<<"no of nodes_count "<<this->no_of_nodes<<endl;
\par \hich\af31506\dbch\af31505\loch\f31506 int val=no_of_nodes;
\par \hich\af31506\dbch\af31505\loch\f31506 //cout<<"node val "<<val<<endl;
\par \hich\af31506\dbch\af31505\loch\f31506 return val;
\par \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 algorithms::result algorithms::minimaxAB(int b[],int depth, int player, int use_thresh, int pass_thresh)\{
\par \tab \hich\af31506\dbch\af31505\loch\f31506 result r,res_succ;
\par \tab \hich\af31506\dbch\af31505\loch\f31506 int new_value,val,bp;
\par \hich\af31506\dbch\af31505\loch\f31506     if (deep_enough(b,depth))\{
\par 
\par \hich\af31506\dbch\af31505\loch\f31506             r.value=static_evaluation_function(b, player);
\par \hich\af31506\dbch\af31505\loch\f31506             r.pa\hich\af31506\dbch\af31505\loch\f31506 th=0;
\par \tab \hich\af31506\dbch\af31505\loch\f31506     //cout<<" deep enough"<<endl;
\par \hich\af31506\dbch\af31505\loch\f31506             return r;
\par \hich\af31506\dbch\af31505\loch\f31506     \}
\par \hich\af31506\dbch\af31505\loch\f31506     else \{
\par \hich\af31506\dbch\af31505\loch\f31506         vector<Game> successors=move_generator(b,player);
\par \hich\af31506\dbch\af31505\loch\f31506         if (successors.empty())\{
\par \hich\af31506\dbch\af31505\loch\f31506             r.value=static_evaluation_function(b, player);
\par \hich\af31506\dbch\af31505\loch\f31506             r.path=0;
\par \hich\af31506\dbch\af31505\loch\f31506     \hich\af31506\dbch\af31505\loch\f31506         return r;
\par \hich\af31506\dbch\af31505\loch\f31506         \}else \{
\par \hich\af31506\dbch\af31505\loch\f31506             //no_of_nodes+=successors.size();
\par \hich\af31506\dbch\af31505\loch\f31506             node_count1(successors.size());
\par \hich\af31506\dbch\af31505\loch\f31506            // cout<<"no of nodes"<<no_of_nodes<<endl;
\par \tab \tab \hich\af31506\dbch\af31505\loch\f31506 for (int i=0; i<successors.size(); i++) \{
\par 
\par \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506  res_succ=minimaxAB(successors[i].board, depth+1, opposite(player), 0-pass_thresh, 0-use_thresh);
\par \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506  val=res_succ.value;
\par \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506  new_value=0-val;
\par 
\par \tab \tab \hich\af31506\dbch\af31505\loch\f31506 //\tab res_succ.path=successors[i].pit;
\par \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506 if (new_value > pass_thresh) \{
\par \tab \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506 pass_thresh=new_value;
\par \tab \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506 bp=suc\hich\af31506\dbch\af31505\loch\f31506 cessors[i].pit;
\par \tab \tab \tab \}
\par \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506 if (pass_thresh>=use_thresh) \{
\par 
\par \tab \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506 r.value=pass_thresh;
\par \tab \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506 r.path=successors[i].pit;
\par \tab \tab \tab \}
\par \tab \tab \}
\par \tab \}
\par \tab \}
\par \tab \hich\af31506\dbch\af31505\loch\f31506 r.value=pass_thresh;
\par \tab \hich\af31506\dbch\af31505\loch\f31506 r.path=bp;
\par \tab \hich\af31506\dbch\af31505\loch\f31506 return r;
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     \}
\par 
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 algorithms::result algorithms::minimaxAB1(int b[],int depth, int player, int\hich\af31506\dbch\af31505\loch\f31506  use_thresh, int pass_thresh)\{
\par \tab \hich\af31506\dbch\af31505\loch\f31506 result r,res_succ;
\par \tab \hich\af31506\dbch\af31505\loch\f31506 int new_value,val,bp;
\par \hich\af31506\dbch\af31505\loch\f31506     if (deep_enough(b,depth))\{
\par 
\par \hich\af31506\dbch\af31505\loch\f31506             r.value=static_evaluation_function(b, player);
\par \hich\af31506\dbch\af31505\loch\f31506             r.path=0;
\par \tab \hich\af31506\dbch\af31505\loch\f31506     //cout<<" deep enough"<<endl;
\par \hich\af31506\dbch\af31505\loch\f31506             return r;
\par \hich\af31506\dbch\af31505\loch\f31506     \}
\par \hich\af31506\dbch\af31505\loch\f31506     else \{
\par \hich\af31506\dbch\af31505\loch\f31506         vector<Game> successors=move_generator(b,player);
\par \hich\af31506\dbch\af31505\loch\f31506         if (successors.empty())\{
\par \hich\af31506\dbch\af31505\loch\f31506             r.value=evaluation_function21(b, player);
\par \hich\af31506\dbch\af31505\loch\f31506             r.path=0;
\par \hich\af31506\dbch\af31505\loch\f31506             ret\hich\af31506\dbch\af31505\loch\f31506 urn r;
\par \hich\af31506\dbch\af31505\loch\f31506         \}else \{
\par \hich\af31506\dbch\af31505\loch\f31506             //no_of_nodes+=successors.size();
\par \hich\af31506\dbch\af31505\loch\f31506             node_count1(successors.size());
\par \hich\af31506\dbch\af31505\loch\f31506            // cout<<"no of nodes"<<no_of_nodes<<endl;
\par \tab \tab \hich\af31506\dbch\af31505\loch\f31506 for (int i=0; i<successors.size(); i++) \{
\par 
\par \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506  res_succ=minimaxAB(successors[i].board, \hich\af31506\dbch\af31505\loch\f31506 depth+1, opposite(player), 0-pass_thresh, 0-use_thresh);
\par \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506  val=res_succ.value;
\par \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506  new_value=0-val;
\par 
\par \tab \tab \hich\af31506\dbch\af31505\loch\f31506 //\tab res_succ.path=successors[i].pit;
\par \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506 if (new_value > pass_thresh) \{
\par \tab \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506 pass_thresh=new_value;
\par \tab \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506 bp=successors[i].pit;
\par \tab \tab \tab \}
\par \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506 if (pass_thresh>=use\hich\af31506\dbch\af31505\loch\f31506 _thresh) \{
\par 
\par \tab \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506 r.value=pass_thresh;
\par \tab \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506 r.path=successors[i].pit;
\par \tab \tab \tab \}
\par \tab \tab \}
\par \tab \}
\par \tab \}
\par \tab \hich\af31506\dbch\af31505\loch\f31506 r.value=pass_thresh;
\par \tab \hich\af31506\dbch\af31505\loch\f31506 r.path=bp;
\par \tab \hich\af31506\dbch\af31505\loch\f31506 return r;
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     \}
\par 
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 bool algorithms::deep_enoughS(int d) \{
\par \tab \hich\af31506\dbch\af31505\loch\f31506 if (d>=2)
\par \tab \tab \hich\af31506\dbch\af31505\loch\f31506 return true;
\par \tab \hich\af31506\dbch\af31505\loch\f31506 return false;
\par \}
\par \hich\af31506\dbch\af31505\loch\f31506 int algorithms::maxVal(Game g, int alpha, int beta) \{
\par \tab \hich\af31506\dbch\af31505\loch\f31506 if (deep_enoughS( currDepth))
\par \tab \{
\par \tab \tab \hich\af31506\dbch\af31505\loch\f31506 //return evaluation_function2(g,g.player);
\par \tab \tab \hich\af31506\dbch\af31505\loch\f31506 return static_evaluation_function(g.board,g.player);
\par \tab \}
\par \tab \hich\af31506\dbch\af31505\loch\f31506 int v=-1000;
\par \tab \hich\af31506\dbch\af31505\loch\f31506 vector<Game> succ=move_generator(g.board,g.player)\hich\af31506\dbch\af31505\loch\f31506 ;
\par \tab \hich\af31506\dbch\af31505\loch\f31506 if (succ.size()==0)\{
\par 
\par \tab \tab \hich\af31506\dbch\af31505\loch\f31506 return -1;
\par \tab \}\hich\af31506\dbch\af31505\loch\f31506 else \{
\par \tab \tab \hich\af31506\dbch\af31505\loch\f31506 currDepth++;
\par \tab \tab \hich\af31506\dbch\af31505\loch\f31506  no_of_nodes+=succ.size();
\par \tab \tab \hich\af31506\dbch\af31505\loch\f31506 for (int i=0; i<succ.size(); i++) \{
\par \tab \tab \hich\af31506\dbch\af31505\loch\f31506 //\tab if (depth==1)
\par \tab \tab \hich\af31506\dbch\af31505\loch\f31506 //\tab \{
\par \tab \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506 int min_val=minVal(succ[i],alpha,beta);
\par \tab \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506 if (v<min_val)
\par \tab \tab \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506 v=min_val;
\par \tab \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506 result r;
\par \tab \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506 r.value=v;
\par \tab \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506 r.path=succ[i].pit;
\par 
\par \tab \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506 arrayList.push_back(r);
\par 
\par \tab \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506 if (v<=alpha)
\par \tab \tab \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506 return v;
\par \tab \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506 if (beta > v)
\par \tab \tab \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506 beta=v;
\par \tab \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506 else\{
\par \tab \tab \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506 if (v<minVal(succ[i],alpha,beta))
\par \tab \tab \tab \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506 v=minVal(succ[i],alpha,beta);
\par \tab \tab \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506 if (v>= beta)
\par \tab \tab \tab \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506 return v;
\par \tab \tab \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506 if (alpha<v)
\par \tab \tab \tab \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506 alpha=v;
\par \tab \tab \tab \tab \}
\par \tab \tab \hich\af31506\dbch\af31505\loch\f31506 //\tab \}
\par \tab \tab \}
\par 
\par \tab \}
\par \tab \hich\af31506\dbch\af31505\loch\f31506 return v;
\par \}
\par 
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 /* returning min turn best value,
\par \hich\af31506\dbch\af31505\loch\f31506  * alpha is the best already explored value to root for max
\par \hich\af31506\dbch\af31505\loch\f31506  * beta is best already explored value to root for min*/
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 int algorithms::minVal(Game g, int alpha, int beta) \{
\par \tab \hich\af31506\dbch\af31505\loch\f31506 if (deep_enoughS(currDepth)) \{
\par \tab \hich\af31506\dbch\af31505\loch\f31506 //\tab if (depth==1)\{
\par \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506 g.player=opposite(g.player);
\par \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506 result r;
\par \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506 //r.value=evaluation_function2(g,g.player);
\par \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506 r.value=static_evaluation_function(g.board,g.player);
\par \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506 r.path=g.pit;
\par \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506 arrayList.push_back(r);
\par \tab \hich\af31506\dbch\af31505\loch\f31506 //\tab \}
\par \tab \tab \hich\af31506\dbch\af31505\loch\f31506 //change evaluation function here
\par \tab \tab \hich\af31506\dbch\af31505\loch\f31506 return evaluation_function2(g,g.player);
\par 
\par \tab \}
\par 
\par \tab \hich\af31506\dbch\af31505\loch\f31506 int v=1000;
\par \tab \hich\af31506\dbch\af31505\loch\f31506 vector<Game> succ=move_generator(g.board,g.player);
\par \hich\af31506\dbch\af31505\loch\f31506     no_of_nodes+=succ.size();
\par \tab \hich\af31506\dbch\af31505\loch\f31506 if (succ.size()==0)
\par \tab \tab \hich\af31506\dbch\af31505\loch\f31506 return -1;
\par \tab \hich\af31506\dbch\af31505\loch\f31506 else \{
\par \tab \tab \hich\af31506\dbch\af31505\loch\f31506 currDepth++;
\par \tab \tab \hich\af31506\dbch\af31505\loch\f31506 for (int i=0;i<succ.size();i++) \{
\par \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506 if (v>maxVal(succ[i],alpha,beta))
\par \tab \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506 v=maxVal(succ[i],alpha,beta);
\par \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506 if (v<=alpha)
\par \tab \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506 return v;
\par \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506 if (beta > v)
\par \tab \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506 beta=v;
\par 
\par \tab \tab \}
\par 
\par \tab \}
\par \tab \hich\af31506\dbch\af31505\loch\f31506 return v;
\par \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 //Function to back up the best value at each node and update the board state
\par \hich\af31506\dbch\af31505\loch\f31506 int algorithms::getActionBoard(int v) \{
\par \tab \hich\af31506\dbch\af31505\loch\f31506 if (v==-1)
\par \tab \tab \hich\af31506\dbch\af31505\loch\f31506 cout<<" integer -1 is returned"<<endl;
\par \tab \hich\af31506\dbch\af31505\loch\f31506 if (arrayList.size()==0)
\par \tab \tab \hich\af31506\dbch\af31505\loch\f31506 cout<<\hich\af31506\dbch\af31505\loch\f31506 "Array list is blank"<<endl;
\par \tab \hich\af31506\dbch\af31505\loch\f31506 for (int i=0; i<arrayList.size();i++) \{
\par \tab \tab \hich\af31506\dbch\af31505\loch\f31506 if (arrayList[i].value==v)
\par \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506 return arrayList[i].path;
\par 
\par \tab \}
\par \tab \hich\af31506\dbch\af31505\loch\f31506 result max=arrayList[0];
\par \tab \hich\af31506\dbch\af31505\loch\f31506 int maxV=arrayList[0].value;
\par \tab \hich\af31506\dbch\af31505\loch\f31506 for (int i=0; i<arrayList.size();i++) \{
\par \tab \tab \hich\af31506\dbch\af31505\loch\f31506 result track;
\par \tab \tab \hich\af31506\dbch\af31505\loch\f31506 track.value=arrayList[i].value;
\par \tab \tab \hich\af31506\dbch\af31505\loch\f31506 track.path=arrayList[i].path;
\par \tab \tab \hich\af31506\dbch\af31505\loch\f31506 if (track.value>maxV)\{
\par \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506 max.value=arrayList[i].value;
\par \tab \tab \tab \hich\af31506\dbch\af31505\loch\f31506 max.path=arrayList[i].path;
\par \tab \tab \}
\par \tab \}
\par \tab \hich\af31506\dbch\af31505\loch\f31506 return max.path;
\par \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 int algorithms::\hich\af31506\dbch\af31505\loch\f31506 alphaBetaSearch(Game g) \{
\par \tab \hich\af31506\dbch\af31505\loch\f31506 int player=g.player;
\par \tab \hich\af31506\dbch\af31505\loch\f31506 int val=maxVal(g, -1000, 1000);
\par \tab \hich\af31506\dbch\af31505\loch\f31506 currDepth=0;
\par \tab \hich\af31506\dbch\af31505\loch\f31506 int p=getActionBoard(val);
\par \hich\af31506\dbch\af31505\loch\f31506 //\tab arrayList.clear();
\par \tab \hich\af31506\dbch\af31505\loch\f31506 return p;
\par \}
\par 
\par 
\par }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid13725727\charrsid13725727 \hich\af31506\dbch\af31505\loch\f31506 D\hich\af31506\dbch\af31505\loch\f31506 river \hich\af31506\dbch\af31505\loch\f31506 file}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid13725727 

\par }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid13725727 \hich\af31506\dbch\af31505\loch\f31506 #include <iostream>
\par \hich\af31506\dbch\af31505\loch\f31506 #include "Game.h"
\par \hich\af31506\dbch\af31505\loch\f31506 #include "algorithms.h"
\par \hich\af31506\dbch\af31505\loch\f31506 #include <chrono>
\par \hich\af31506\dbch\af31505\loch\f31506 #include <cstdlib>
\par \hich\af31506\dbch\af31505\loch\f31506 #include<ctime>
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 using \hich\af31506\dbch\af31505\loch\f31506 namespace std;
\par \hich\af31506\dbch\af31505\loch\f31506 using namespace std::chrono;
\par \hich\af31506\dbch\af31505\loch\f31506 int nodes=0;
\par \hich\af31506\dbch\af31505\loch\f31506 int computer_mov\hich\af31506\dbch\af31505\loch\f31506 e(Game g) \{
\par \hich\af31506\dbch\af31505\loch\f31506     algorithms a;
\par \hich\af31506\dbch\af31505\loch\f31506     int v=a.alphaBetaSearch(g);
\par \hich\af31506\dbch\af31505\loch\f31506     nodes+=a.node_count();
\par \tab \hich\af31506\dbch\af31505\loch\f31506 //return a.initialize(arr,player_no);
\par \tab \hich\af31506\dbch\af31505\loch\f31506 return v;
\par 
\par \}
\par \hich\af31506\dbch\af31505\loch\f31506 int computer_move1(Game g) \{
\par \hich\af31506\dbch\af31505\loch\f31506     algorithms a;
\par \hich\af31506\dbch\af31505\loch\f31506     int v=a.initialize(g.board,g.player);
\par \hich\af31506\dbch\af31505\loch\f31506     nodes+=a.node_count()\hich\af31506\dbch\af31505\loch\f31506 ;
\par 
\par 
\par \tab \hich\af31506\dbch\af31505\loch\f31506 return v;
\par \tab \hich\af31506\dbch\af31505\loch\f31506 //return a.alphaBetaSearch(g);
\par 
\par \}
\par 
\par 
\par 
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 int main()
\par \{
\par \hich\af31506\dbch\af31505\loch\f31506     int gs, pit;
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     cout<<"***********Welcome to  Mancala Game!***********"<<endl<<endl;
\par \hich\af31506\dbch\af31505\loch\f31506     Game g;
\par \hich\af31506\dbch\af31505\loch\f31506     g.start();
\par \hich\af31506\dbch\af31505\loch\f31506     g.display();
\par \hich\af31506\dbch\af31505\loch\f31506     int user, comp;
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     cout<<endl<<endl;
\par \hich\af31506\dbch\af31505\loch\f31506     cout<<"First line is Player 2, Second line is Player 1"<<endl;
\par \hich\af31506\dbch\af31505\loch\f31506     cout<<"*********MENU********"<<endl;
\par \hich\af31506\dbch\af31505\loch\f31506     cout<<"1. MINMAX VS MINMAX"<<endl;
\par \hich\af31506\dbch\af31505\loch\f31506     cout<<"2. alpha beta vs alpha beta"<<endl;
\par \hich\af31506\dbch\af31505\loch\f31506     cout<<"3. minmax vs alpha beta"<<end\hich\af31506\dbch\af31505\loch\f31506 l;
\par \hich\af31506\dbch\af31505\loch\f31506     int ch;
\par \hich\af31506\dbch\af31505\loch\f31506     cout<<"Which option want to start first (input 1 or 2) :";
\par \hich\af31506\dbch\af31505\loch\f31506     cin>>ch;
\par \hich\af31506\dbch\af31505\loch\f31506     g.player=1;
\par \hich\af31506\dbch\af31505\loch\f31506     int rounds=0;
\par \hich\af31506\dbch\af31505\loch\f31506     if (ch==1)\{
\par \hich\af31506\dbch\af31505\loch\f31506             auto start = high_resolution_clock::now();
\par \hich\af31506\dbch\af31505\loch\f31506          while(rounds<50) \{
\par \hich\af31506\dbch\af31505\loch\f31506         if (g.is_game_ends())\{
\par \hich\af31506\dbch\af31505\loch\f31506             cout<<" Player "<<g.player<<" don't have any legal moves"<<endl;
\par \hich\af31506\dbch\af31505\loch\f31506             cout<<" collecting stones to the stores......."<<endl;
\par \hich\af31506\dbch\af31505\loch\f31506             cout<<" Player "<<g.who_wins()<<" wins the game!"<<endl;
\par \hich\af31506\dbch\af31505\loch\f31506             \hich\af31506\dbch\af31505\loch\f31506 break;
\par \hich\af31506\dbch\af31505\loch\f31506         \}
\par \hich\af31506\dbch\af31505\loch\f31506         if (g.player==1) \{
\par \hich\af31506\dbch\af31505\loch\f31506             //cout<<" Turn for player "<<g.player<<endl;
\par \hich\af31506\dbch\af31505\loch\f31506            // cout<<" pick the pit number (1-6) :";
\par \hich\af31506\dbch\af31505\loch\f31506            // cin>>g.pit;
\par \hich\af31506\dbch\af31505\loch\f31506            cout<<" Turn for player 1 "<<endl;
\par \hich\af31506\dbch\af31505\loch\f31506             g.pit=computer_move\hich\af31506\dbch\af31505\loch\f31506 1(g);
\par \hich\af31506\dbch\af31505\loch\f31506             cout<<" player 1 choses pit "<<g.pit<<endl;
\par \hich\af31506\dbch\af31505\loch\f31506         \}else \{
\par \hich\af31506\dbch\af31505\loch\f31506             cout<<" Turn for player 2 "<<endl;
\par \hich\af31506\dbch\af31505\loch\f31506             g.pit=computer_move1(g);
\par \hich\af31506\dbch\af31505\loch\f31506             cout<<" player 2 choses pit "<<g.pit<<endl;
\par \hich\af31506\dbch\af31505\loch\f31506         \}
\par \hich\af31506\dbch\af31505\loch\f31506         g.make_move();
\par \hich\af31506\dbch\af31505\loch\f31506      \hich\af31506\dbch\af31505\loch\f31506    g.display();
\par \hich\af31506\dbch\af31505\loch\f31506         g.player_turn();
\par \hich\af31506\dbch\af31505\loch\f31506         rounds++;
\par \hich\af31506\dbch\af31505\loch\f31506     \}
\par \hich\af31506\dbch\af31505\loch\f31506     auto stop = high_resolution_clock::now();
\par \hich\af31506\dbch\af31505\loch\f31506     auto duration = duration_cast<microseconds>(stop - start);
\par \hich\af31506\dbch\af31505\loch\f31506      cout << "Time taken by function: "
\par \hich\af31506\dbch\af31505\loch\f31506          << duration.count() << " microseconds" << endl;
\par \hich\af31506\dbch\af31505\loch\f31506     cout<<"Total Node Count:"<<nodes<<endl;
\par \hich\af31506\dbch\af31505\loch\f31506     cout<<"Length of the game path"<< 2 * rounds<<endl;
\par \hich\af31506\dbch\af31505\loch\f31506     nodes=0;
\par 
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     if (ch==2)\{
\par \hich\af31506\dbch\af31505\loch\f31506         auto start = high_resolution_clock::now();
\par \hich\af31506\dbch\af31505\loch\f31506          w\hich\af31506\dbch\af31505\loch\f31506 hile(rounds<50) \{
\par \hich\af31506\dbch\af31505\loch\f31506         if (g.is_game_ends())\{
\par \hich\af31506\dbch\af31505\loch\f31506             cout<<" Player "<<g.player<<" don't have any legal moves"<<endl;
\par \hich\af31506\dbch\af31505\loch\f31506             cout<<" collecting stones to the stores......."<<endl;
\par \hich\af31506\dbch\af31505\loch\f31506             cout<<" Player "<<g.who_wins()<<" wins the game!"<<\hich\af31506\dbch\af31505\loch\f31506 endl;
\par \hich\af31506\dbch\af31505\loch\f31506             break;
\par \hich\af31506\dbch\af31505\loch\f31506         \}
\par \hich\af31506\dbch\af31505\loch\f31506         if (g.player==1) \{
\par \hich\af31506\dbch\af31505\loch\f31506             //cout<<" Turn for player "<<g.player<<endl;
\par \hich\af31506\dbch\af31505\loch\f31506            // cout<<" pick the pit number (1-6) :";
\par \hich\af31506\dbch\af31505\loch\f31506            // cin>>g.pit;
\par \hich\af31506\dbch\af31505\loch\f31506            cout<<" Turn for player 1 "<<endl;
\par \hich\af31506\dbch\af31505\loch\f31506             g\hich\af31506\dbch\af31505\loch\f31506 .pit=computer_move(g);
\par \hich\af31506\dbch\af31505\loch\f31506             cout<<" player 1 choses pit "<<g.pit<<endl;
\par \hich\af31506\dbch\af31505\loch\f31506         \}else \{
\par \hich\af31506\dbch\af31505\loch\f31506             cout<<" Turn for player 2 "<<endl;
\par \hich\af31506\dbch\af31505\loch\f31506             g.pit=computer_move(g);
\par \hich\af31506\dbch\af31505\loch\f31506             cout<<" player 2 choses pit "<<g.pit<<endl;
\par \hich\af31506\dbch\af31505\loch\f31506         \}
\par \hich\af31506\dbch\af31505\loch\f31506         g.make_move();
\par \hich\af31506\dbch\af31505\loch\f31506         g.display();
\par \hich\af31506\dbch\af31505\loch\f31506         g.player_turn();
\par \hich\af31506\dbch\af31505\loch\f31506         rounds++;
\par \hich\af31506\dbch\af31505\loch\f31506     \}
\par \hich\af31506\dbch\af31505\loch\f31506         auto stop = high_resolution_clock::now();
\par \hich\af31506\dbch\af31505\loch\f31506     auto duration = duration_cast<microseconds>(stop - start);
\par \hich\af31506\dbch\af31505\loch\f31506      cout << "Time taken by function: "
\par \hich\af31506\dbch\af31505\loch\f31506          <\hich\af31506\dbch\af31505\loch\f31506 < duration.count() << " microseconds" << endl;
\par \hich\af31506\dbch\af31505\loch\f31506     cout<<"Total Node Count:"<<nodes<<endl;
\par \hich\af31506\dbch\af31505\loch\f31506     cout<<"Length of the game path"<< 2 * rounds<<endl;
\par \hich\af31506\dbch\af31505\loch\f31506     nodes=0;
\par 
\par \hich\af31506\dbch\af31505\loch\f31506         rounds=0;
\par \hich\af31506\dbch\af31505\loch\f31506     \}
\par 
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     if (ch==3)\{
\par \hich\af31506\dbch\af31505\loch\f31506             auto start = high_resolution_clock::now()\hich\af31506\dbch\af31505\loch\f31506 ;
\par \hich\af31506\dbch\af31505\loch\f31506          while(rounds<50) \{
\par \hich\af31506\dbch\af31505\loch\f31506         if (g.is_game_ends())\{
\par \hich\af31506\dbch\af31505\loch\f31506             cout<<" Player "<<g.player<<" don't have any legal moves"<<endl;
\par \hich\af31506\dbch\af31505\loch\f31506             cout<<" collecting stones to the stores......."<<endl;
\par \hich\af31506\dbch\af31505\loch\f31506             cout<<" Player "<<g.who_wins()<<" wins \hich\af31506\dbch\af31505\loch\f31506 the game!"<<endl;
\par \hich\af31506\dbch\af31505\loch\f31506             break;
\par \hich\af31506\dbch\af31505\loch\f31506         \}
\par \hich\af31506\dbch\af31505\loch\f31506         if (g.player==1) \{
\par \hich\af31506\dbch\af31505\loch\f31506             //cout<<" Turn for player "<<g.player<<endl;
\par \hich\af31506\dbch\af31505\loch\f31506            // cout<<" pick the pit number (1-6) :";
\par \hich\af31506\dbch\af31505\loch\f31506            // cin>>g.pit;
\par \hich\af31506\dbch\af31505\loch\f31506            cout<<" Turn for player 1 "<<endl;
\par \hich\af31506\dbch\af31505\loch\f31506             g.pit=computer_move1(g);
\par \hich\af31506\dbch\af31505\loch\f31506             cout<<" player 1 choses pit "<<g.pit<<endl;
\par \hich\af31506\dbch\af31505\loch\f31506         \}else \{
\par \hich\af31506\dbch\af31505\loch\f31506             cout<<" Turn for player 2 "<<endl;
\par \hich\af31506\dbch\af31505\loch\f31506             g.pit=computer_move(g);
\par \hich\af31506\dbch\af31505\loch\f31506             cout<<\hich\af31506\dbch\af31505\loch\f31506 " player 2 choses pit "<<g.pit<<endl;
\par \hich\af31506\dbch\af31505\loch\f31506         \}
\par \hich\af31506\dbch\af31505\loch\f31506         g.make_move();
\par \hich\af31506\dbch\af31505\loch\f31506         g.display();
\par \hich\af31506\dbch\af31505\loch\f31506         g.player_turn();
\par \hich\af31506\dbch\af31505\loch\f31506         rounds++;
\par \hich\af31506\dbch\af31505\loch\f31506     \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     auto stop = high_resolution_clock::now();
\par \hich\af31506\dbch\af31505\loch\f31506     auto duration = duration_cast<microseconds>(stop - start);
\par \hich\af31506\dbch\af31505\loch\f31506      \hich\af31506\dbch\af31505\loch\f31506 cout << "Time taken by function: "
\par \hich\af31506\dbch\af31505\loch\f31506          << duration.count() << " microseconds" << endl;
\par \hich\af31506\dbch\af31505\loch\f31506     cout<<"Total Node Count:"<<nodes<<endl;
\par \hich\af31506\dbch\af31505\loch\f31506     cout<<"Length of the game path"<< 2 * rounds<<endl;
\par \hich\af31506\dbch\af31505\loch\f31506     nodes=0;
\par \hich\af31506\dbch\af31505\loch\f31506     \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   /*  while(1) \{
\par \hich\af31506\dbch\af31505\loch\f31506         if (g.is_game_ends(\hich\af31506\dbch\af31505\loch\f31506 ))\{
\par \hich\af31506\dbch\af31505\loch\f31506             cout<<" Player "<<g.player<<" don't have any legal moves"<<endl;
\par \hich\af31506\dbch\af31505\loch\f31506             cout<<" collecting stones to the stores......."<<endl;
\par \hich\af31506\dbch\af31505\loch\f31506             cout<<" Player "<<g.who_wins()<<" wins the game!"<<endl;
\par \hich\af31506\dbch\af31505\loch\f31506             break;
\par \hich\af31506\dbch\af31505\loch\f31506         \}
\par \hich\af31506\dbch\af31505\loch\f31506         if (g.player==user) \{
\par \hich\af31506\dbch\af31505\loch\f31506             cout<<" Turn for player "<<g.player<<endl;
\par \hich\af31506\dbch\af31505\loch\f31506             cout<<" pick the pit number (1-6) :";
\par \hich\af31506\dbch\af31505\loch\f31506             cin>>g.pit;
\par \hich\af31506\dbch\af31505\loch\f31506         \}else \{
\par \hich\af31506\dbch\af31505\loch\f31506             cout<<" Turn for computer "<<endl;
\par \hich\af31506\dbch\af31505\loch\f31506             g.pit=computer_move(g);
\par \hich\af31506\dbch\af31505\loch\f31506             cout<<" Computer choses pit "<<g.pit<<endl;
\par \hich\af31506\dbch\af31505\loch\f31506         \}
\par \hich\af31506\dbch\af31505\loch\f31506         g.make_move();
\par \hich\af31506\dbch\af31505\loch\f31506         g.display();
\par \hich\af31506\dbch\af31505\loch\f31506         g.player_turn();
\par \hich\af31506\dbch\af31505\loch\f31506     \}*/
\par 
\par \}}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid13725727\charrsid13725727 
\par }{\*\themedata 504b030414000600080000002100e9de0fbfff0000001c020000130000005b436f6e74656e745f54797065735d2e786d6cac91cb4ec3301045f748fc83e52d4a
9cb2400825e982c78ec7a27cc0c8992416c9d8b2a755fbf74cd25442a820166c2cd933f79e3be372bd1f07b5c3989ca74aaff2422b24eb1b475da5df374fd9ad
5689811a183c61a50f98f4babebc2837878049899a52a57be670674cb23d8e90721f90a4d2fa3802cb35762680fd800ecd7551dc18eb899138e3c943d7e503b6
b01d583deee5f99824e290b4ba3f364eac4a430883b3c092d4eca8f946c916422ecab927f52ea42b89a1cd59c254f919b0e85e6535d135a8de20f20b8c12c3b0
0c895fcf6720192de6bf3b9e89ecdbd6596cbcdd8eb28e7c365ecc4ec1ff1460f53fe813d3cc7f5b7f020000ffff0300504b030414000600080000002100a5d6
a7e7c0000000360100000b0000005f72656c732f2e72656c73848fcf6ac3300c87ef85bd83d17d51d2c31825762fa590432fa37d00e1287f68221bdb1bebdb4f
c7060abb0884a4eff7a93dfeae8bf9e194e720169aaa06c3e2433fcb68e1763dbf7f82c985a4a725085b787086a37bdbb55fbc50d1a33ccd311ba548b6309512
0f88d94fbc52ae4264d1c910d24a45db3462247fa791715fd71f989e19e0364cd3f51652d73760ae8fa8c9ffb3c330cc9e4fc17faf2ce545046e37944c69e462
a1a82fe353bd90a865aad41ed0b5b8f9d6fd010000ffff0300504b0304140006000800000021006b799616830000008a0000001c0000007468656d652f746865
6d652f7468656d654d616e616765722e786d6c0ccc4d0ac3201040e17da17790d93763bb284562b2cbaebbf600439c1a41c7a0d29fdbd7e5e38337cedf14d59b
4b0d592c9c070d8a65cd2e88b7f07c2ca71ba8da481cc52c6ce1c715e6e97818c9b48d13df49c873517d23d59085adb5dd20d6b52bd521ef2cdd5eb9246a3d8b
4757e8d3f729e245eb2b260a0238fd010000ffff0300504b030414000600080000002100b6f4679893070000c9200000160000007468656d652f7468656d652f
7468656d65312e786d6cec59cd8b1bc915bf07f23f347d97f5d5ad8fc1f2a24fcfda33b6b164873dd648a5eef2547789aad28cc56208de532e81c026e49085bd
ed21842cecc22eb9e48f31d8249b3f22afaa5bdd5552c99e191c3061463074977eefd5afde7bf5de53d5ddcf5e26d4bbc05c1096f6fcfa9d9aefe174ce16248d
7afeb3d9a4d2f13d2151ba4094a5b8e76fb0f03fbbf7eb5fdd454732c609f6403e1547a8e7c752ae8eaa5531876124eeb0154ee1bb25e30992f0caa3ea82a34b
d09bd06aa3566b55134452df4b51026a1f2f97648ebd9952e9dfdb2a1f53784da5500373caa74a35b6243476715e5708b11143cabd0b447b3eccb3609733fc52
fa1e4542c2173dbfa6fffceabdbb5574940b517940d6909be8bf5c2e17589c37f49c3c3a2b260d823068f50bfd1a40e53e6edc1eb7c6ad429f06a0f91c569a71
b175b61bc320c71aa0ecd1a17bd41e35eb16ded0dfdce3dc0fd5c7c26b50a63fd8c34f2643b0a285d7a00c1feee1c3417730b2f56b50866fede1dbb5fe28685b
fa3528a6243ddf43d7c25673b85d6d0159327aec8477c360d26ee4ca4b144443115d6a8a254be5a1584bd00bc6270050408a24493db959e1259a43140f112567
9c7827248a21f056286502866b8ddaa4d684ffea13e827ed5174849121ad780113b137a4f87862cec94af6fc07a0d537206f7ffef9cdeb1fdfbcfee9cd575fbd
79fdf77c6eadca923b466964cafdf2dd1ffef3cd6fbd7ffff0ed2f5fff319b7a172f4cfcbbbffdeedd3ffef93ef5b0e2d2146ffff4fdbb1fbf7ffbe7dfffebaf
5f3bb4f7393a33e1339260e13dc297de5396c0021dfcf119bf9ec42c46c494e8a791402952b338f48f656ca11f6d10450edc00db767cce21d5b880f7d72f2cc2
d398af2571687c182716f094313a60dc6985876a2ec3ccb3751ab927e76b13f714a10bd7dc43945a5e1eaf579063894be530c616cd2714a5124538c5d253dfb1
738c1dabfb8210cbaea764ce99604be97d41bc01224e93ccc899154da5d03149c02f1b1741f0b7659bd3e7de8051d7aa47f8c246c2de40d4417e86a965c6fb68
2d51e252394309350d7e8264ec2239ddf0b9891b0b099e8e3065de78818570c93ce6b05ec3e90f21cdb8dd7e4a37898de4929cbb749e20c64ce4889d0f6394ac
5cd829496313fbb938871045de13265df05366ef10f50e7e40e941773f27d872f787b3c133c8b026a53240d4376beef0e57dccacf89d6ee8126157aae9f3c44a
b17d4e9cd131584756689f604cd1255a60ec3dfbdcc160c05696cd4bd20f62c82ac7d815580f901dabea3dc5027a25d5dcece7c91322ac909de2881de073bad9
493c1b9426881fd2fc08bc6eda7c0ca52e7105c0633a3f37818f08f480102f4ea33c16a0c308ee835a9fc4c82a60ea5db8e375c32dff5d658fc1be7c61d1b8c2
be04197c6d1948eca6cc7b6d3343d49aa00c9819822ec3956e41c4727f29a28aab165b3be596f6a62ddd00dd91d5f42424fd6007b4d3fb84ffbbde073a8cb77f
f9c6b10f3e4ebfe3566c25ab6b763a8792c9f14e7f7308b7dbd50c195f904fbfa919a175fa04431dd9cf58b73dcd6d4fe3ffdff73487f6f36d2773a8dfb8ed64
7ce8306e3b99fc70e5e3743265f3027d8d3af0c80e7af4b14f72f0d46749289dca0dc527421ffc08f83db398c0a092d3279eb838055cc5f0a8ca1c4c60e1228e
b48cc799fc0d91f134462b381daafb4a492472d591f0564cc0a1911e76ea5678ba4e4ed9223becacd7d5c16656590592e5782d2cc6e1a04a66e856bb3cc02bd4
6bb6913e68dd1250b2d721614c6693683a48b4b783ca48fa58178ce620a157f65158741d2c3a4afdd6557b2c805ae115f8c1edc1cff49e1f06200242701e07cd
f942f92973f5d6bbda991fd3d3878c69450034d8db08283ddd555c0f2e4fad2e0bb52b78da2261849b4d425b46377822869fc17974aad1abd0b8aeafbba54b2d
7aca147a3e08ad9246bbf33e1637f535c8ede6069a9a9982a6de65cf6f35430899395af5fc251c1ac363b282d811ea3717a211dcbccc25cf36fc4d32cb8a0b39
4222ce0cae934e960d122231f728497abe5a7ee1069aea1ca2b9d51b90103e59725d482b9f1a3970baed64bc5ce2b934dd6e8c284b67af90e1b35ce1fc568bdf
1cac24d91adc3d8d1797de195df3a708422c6cd795011744c0dd413db3e682c0655891c8caf8db294c79da356fa3740c65e388ae62945714339967709dca0b3a
faadb081f196af190c6a98242f8467912ab0a651ad6a5a548d8cc3c1aafb6121653923699635d3ca2aaa6abab39835c3b60cecd8f26645de60b53531e434b3c2
67a97b37e576b7b96ea74f28aa0418bcb09fa3ea5ea12018d4cac92c6a8af17e1a56393b1fb56bc776811fa07695226164fdd656ed8edd8a1ae19c0e066f54f9
416e376a6168b9ed2bb5a5f5adb979b1cdce5e40f2184197bba6526857c2c92e47d0104d754f92a50dd8222f65be35e0c95b73d2f3bfac85fd60d80887955a27
1c57826650ab74c27eb3d20fc3667d1cd66ba341e31514161927f530bbb19fc00506dde4f7f67a7cefee3ed9ded1dc99b3a4caf4dd7c5513d777f7f5c6e1bb7b
8f40d2f9b2d598749bdd41abd26df627956034e854bac3d6a0326a0ddba3c9681876ba9357be77a1c141bf390c5ae34ea5551f0e2b41aba6e877ba9576d068f4
8376bf330efaaff23606569ea58fdc16605ecdebde7f010000ffff0300504b0304140006000800000021000dd1909fb60000001b010000270000007468656d65
2f7468656d652f5f72656c732f7468656d654d616e616765722e786d6c2e72656c73848f4d0ac2301484f78277086f6fd3ba109126dd88d0add40384e4350d36
3f2451eced0dae2c082e8761be9969bb979dc9136332de3168aa1a083ae995719ac16db8ec8e4052164e89d93b64b060828e6f37ed1567914b284d262452282e
3198720e274a939cd08a54f980ae38a38f56e422a3a641c8bbd048f7757da0f19b017cc524bd62107bd5001996509affb3fd381a89672f1f165dfe514173d985
0528a2c6cce0239baa4c04ca5bbabac4df000000ffff0300504b01022d0014000600080000002100e9de0fbfff0000001c020000130000000000000000000000
0000000000005b436f6e74656e745f54797065735d2e786d6c504b01022d0014000600080000002100a5d6a7e7c0000000360100000b00000000000000000000
000000300100005f72656c732f2e72656c73504b01022d00140006000800000021006b799616830000008a0000001c0000000000000000000000000019020000
7468656d652f7468656d652f7468656d654d616e616765722e786d6c504b01022d0014000600080000002100b6f4679893070000c92000001600000000000000
000000000000d60200007468656d652f7468656d652f7468656d65312e786d6c504b01022d00140006000800000021000dd1909fb60000001b01000027000000
000000000000000000009d0a00007468656d652f7468656d652f5f72656c732f7468656d654d616e616765722e786d6c2e72656c73504b050600000000050005005d010000980b00000000}
{\*\colorschememapping 3c3f786d6c2076657273696f6e3d22312e302220656e636f64696e673d225554462d3822207374616e64616c6f6e653d22796573223f3e0d0a3c613a636c724d
617020786d6c6e733a613d22687474703a2f2f736368656d61732e6f70656e786d6c666f726d6174732e6f72672f64726177696e676d6c2f323030362f6d6169
6e22206267313d226c743122207478313d22646b3122206267323d226c743222207478323d22646b322220616363656e74313d22616363656e74312220616363
656e74323d22616363656e74322220616363656e74333d22616363656e74332220616363656e74343d22616363656e74342220616363656e74353d22616363656e74352220616363656e74363d22616363656e74362220686c696e6b3d22686c696e6b2220666f6c486c696e6b3d22666f6c486c696e6b222f3e}
{\*\latentstyles\lsdstimax375\lsdlockeddef0\lsdsemihiddendef0\lsdunhideuseddef0\lsdqformatdef0\lsdprioritydef99{\lsdlockedexcept \lsdqformat1 \lsdpriority0 \lsdlocked0 Normal;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 1;
\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 2;\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 3;\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 4;
\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 5;\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 6;\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 7;
\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 8;\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 9;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 1;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 4;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 5;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 6;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 7;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 8;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 9;
\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 1;\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 2;\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 3;
\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 4;\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 5;\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 6;
\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 7;\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 8;\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 9;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Normal Indent;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 footnote text;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 annotation text;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 header;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 footer;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index heading;\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority35 \lsdlocked0 caption;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 table of figures;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 envelope address;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 envelope return;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 footnote reference;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 annotation reference;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 line number;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 page number;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 endnote reference;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 endnote text;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 table of authorities;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 macro;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 toa heading;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Bullet;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Number;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List 3;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List 4;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List 5;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Bullet 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Bullet 3;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Bullet 4;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Bullet 5;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Number 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Number 3;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Number 4;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Number 5;\lsdqformat1 \lsdpriority10 \lsdlocked0 Title;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Closing;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Signature;\lsdsemihidden1 \lsdunhideused1 \lsdpriority1 \lsdlocked0 Default Paragraph Font;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text Indent;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Continue;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Continue 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Continue 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Continue 4;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Continue 5;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Message Header;\lsdqformat1 \lsdpriority11 \lsdlocked0 Subtitle;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Salutation;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Date;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text First Indent;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text First Indent 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Note Heading;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text Indent 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text Indent 3;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Block Text;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Hyperlink;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 FollowedHyperlink;\lsdqformat1 \lsdpriority22 \lsdlocked0 Strong;
\lsdqformat1 \lsdpriority20 \lsdlocked0 Emphasis;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Document Map;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Plain Text;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 E-mail Signature;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Top of Form;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Bottom of Form;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Normal (Web);\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Acronym;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Address;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Cite;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Code;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Definition;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Keyboard;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Preformatted;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Sample;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Typewriter;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Variable;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Normal Table;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 annotation subject;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 No List;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Outline List 1;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Outline List 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Outline List 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Simple 1;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Simple 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Simple 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Classic 1;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Classic 2;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Classic 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Classic 4;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Colorful 1;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Colorful 2;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Colorful 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Columns 1;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Columns 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Columns 3;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Columns 4;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Columns 5;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Grid 1;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Grid 2;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Grid 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Grid 4;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Grid 5;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Grid 6;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Grid 7;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Grid 8;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table List 1;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table List 2;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table List 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table List 4;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table List 5;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table List 6;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table List 7;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table List 8;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table 3D effects 1;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table 3D effects 2;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table 3D effects 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Contemporary;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Elegant;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Professional;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Subtle 1;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Subtle 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Web 1;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Web 2;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Web 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Balloon Text;\lsdpriority39 \lsdlocked0 Table Grid;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Theme;\lsdsemihidden1 \lsdlocked0 Placeholder Text;
\lsdqformat1 \lsdpriority1 \lsdlocked0 No Spacing;\lsdpriority60 \lsdlocked0 Light Shading;\lsdpriority61 \lsdlocked0 Light List;\lsdpriority62 \lsdlocked0 Light Grid;\lsdpriority63 \lsdlocked0 Medium Shading 1;\lsdpriority64 \lsdlocked0 Medium Shading 2;
\lsdpriority65 \lsdlocked0 Medium List 1;\lsdpriority66 \lsdlocked0 Medium List 2;\lsdpriority67 \lsdlocked0 Medium Grid 1;\lsdpriority68 \lsdlocked0 Medium Grid 2;\lsdpriority69 \lsdlocked0 Medium Grid 3;\lsdpriority70 \lsdlocked0 Dark List;
\lsdpriority71 \lsdlocked0 Colorful Shading;\lsdpriority72 \lsdlocked0 Colorful List;\lsdpriority73 \lsdlocked0 Colorful Grid;\lsdpriority60 \lsdlocked0 Light Shading Accent 1;\lsdpriority61 \lsdlocked0 Light List Accent 1;
\lsdpriority62 \lsdlocked0 Light Grid Accent 1;\lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 1;\lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 1;\lsdpriority65 \lsdlocked0 Medium List 1 Accent 1;\lsdsemihidden1 \lsdlocked0 Revision;
\lsdqformat1 \lsdpriority34 \lsdlocked0 List Paragraph;\lsdqformat1 \lsdpriority29 \lsdlocked0 Quote;\lsdqformat1 \lsdpriority30 \lsdlocked0 Intense Quote;\lsdpriority66 \lsdlocked0 Medium List 2 Accent 1;\lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 1;
\lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 1;\lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 1;\lsdpriority70 \lsdlocked0 Dark List Accent 1;\lsdpriority71 \lsdlocked0 Colorful Shading Accent 1;\lsdpriority72 \lsdlocked0 Colorful List Accent 1;
\lsdpriority73 \lsdlocked0 Colorful Grid Accent 1;\lsdpriority60 \lsdlocked0 Light Shading Accent 2;\lsdpriority61 \lsdlocked0 Light List Accent 2;\lsdpriority62 \lsdlocked0 Light Grid Accent 2;\lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 2;
\lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 2;\lsdpriority65 \lsdlocked0 Medium List 1 Accent 2;\lsdpriority66 \lsdlocked0 Medium List 2 Accent 2;\lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 2;\lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 2;
\lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 2;\lsdpriority70 \lsdlocked0 Dark List Accent 2;\lsdpriority71 \lsdlocked0 Colorful Shading Accent 2;\lsdpriority72 \lsdlocked0 Colorful List Accent 2;\lsdpriority73 \lsdlocked0 Colorful Grid Accent 2;
\lsdpriority60 \lsdlocked0 Light Shading Accent 3;\lsdpriority61 \lsdlocked0 Light List Accent 3;\lsdpriority62 \lsdlocked0 Light Grid Accent 3;\lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 3;\lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 3;
\lsdpriority65 \lsdlocked0 Medium List 1 Accent 3;\lsdpriority66 \lsdlocked0 Medium List 2 Accent 3;\lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 3;\lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 3;\lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 3;
\lsdpriority70 \lsdlocked0 Dark List Accent 3;\lsdpriority71 \lsdlocked0 Colorful Shading Accent 3;\lsdpriority72 \lsdlocked0 Colorful List Accent 3;\lsdpriority73 \lsdlocked0 Colorful Grid Accent 3;\lsdpriority60 \lsdlocked0 Light Shading Accent 4;
\lsdpriority61 \lsdlocked0 Light List Accent 4;\lsdpriority62 \lsdlocked0 Light Grid Accent 4;\lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 4;\lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 4;\lsdpriority65 \lsdlocked0 Medium List 1 Accent 4;
\lsdpriority66 \lsdlocked0 Medium List 2 Accent 4;\lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 4;\lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 4;\lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 4;\lsdpriority70 \lsdlocked0 Dark List Accent 4;
\lsdpriority71 \lsdlocked0 Colorful Shading Accent 4;\lsdpriority72 \lsdlocked0 Colorful List Accent 4;\lsdpriority73 \lsdlocked0 Colorful Grid Accent 4;\lsdpriority60 \lsdlocked0 Light Shading Accent 5;\lsdpriority61 \lsdlocked0 Light List Accent 5;
\lsdpriority62 \lsdlocked0 Light Grid Accent 5;\lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 5;\lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 5;\lsdpriority65 \lsdlocked0 Medium List 1 Accent 5;\lsdpriority66 \lsdlocked0 Medium List 2 Accent 5;
\lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 5;\lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 5;\lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 5;\lsdpriority70 \lsdlocked0 Dark List Accent 5;\lsdpriority71 \lsdlocked0 Colorful Shading Accent 5;
\lsdpriority72 \lsdlocked0 Colorful List Accent 5;\lsdpriority73 \lsdlocked0 Colorful Grid Accent 5;\lsdpriority60 \lsdlocked0 Light Shading Accent 6;\lsdpriority61 \lsdlocked0 Light List Accent 6;\lsdpriority62 \lsdlocked0 Light Grid Accent 6;
\lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 6;\lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 6;\lsdpriority65 \lsdlocked0 Medium List 1 Accent 6;\lsdpriority66 \lsdlocked0 Medium List 2 Accent 6;
\lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 6;\lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 6;\lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 6;\lsdpriority70 \lsdlocked0 Dark List Accent 6;\lsdpriority71 \lsdlocked0 Colorful Shading Accent 6;
\lsdpriority72 \lsdlocked0 Colorful List Accent 6;\lsdpriority73 \lsdlocked0 Colorful Grid Accent 6;\lsdqformat1 \lsdpriority19 \lsdlocked0 Subtle Emphasis;\lsdqformat1 \lsdpriority21 \lsdlocked0 Intense Emphasis;
\lsdqformat1 \lsdpriority31 \lsdlocked0 Subtle Reference;\lsdqformat1 \lsdpriority32 \lsdlocked0 Intense Reference;\lsdqformat1 \lsdpriority33 \lsdlocked0 Book Title;\lsdsemihidden1 \lsdunhideused1 \lsdpriority37 \lsdlocked0 Bibliography;
\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority39 \lsdlocked0 TOC Heading;\lsdpriority41 \lsdlocked0 Plain Table 1;\lsdpriority42 \lsdlocked0 Plain Table 2;\lsdpriority43 \lsdlocked0 Plain Table 3;\lsdpriority44 \lsdlocked0 Plain Table 4;
\lsdpriority45 \lsdlocked0 Plain Table 5;\lsdpriority40 \lsdlocked0 Grid Table Light;\lsdpriority46 \lsdlocked0 Grid Table 1 Light;\lsdpriority47 \lsdlocked0 Grid Table 2;\lsdpriority48 \lsdlocked0 Grid Table 3;\lsdpriority49 \lsdlocked0 Grid Table 4;
\lsdpriority50 \lsdlocked0 Grid Table 5 Dark;\lsdpriority51 \lsdlocked0 Grid Table 6 Colorful;\lsdpriority52 \lsdlocked0 Grid Table 7 Colorful;\lsdpriority46 \lsdlocked0 Grid Table 1 Light Accent 1;\lsdpriority47 \lsdlocked0 Grid Table 2 Accent 1;
\lsdpriority48 \lsdlocked0 Grid Table 3 Accent 1;\lsdpriority49 \lsdlocked0 Grid Table 4 Accent 1;\lsdpriority50 \lsdlocked0 Grid Table 5 Dark Accent 1;\lsdpriority51 \lsdlocked0 Grid Table 6 Colorful Accent 1;
\lsdpriority52 \lsdlocked0 Grid Table 7 Colorful Accent 1;\lsdpriority46 \lsdlocked0 Grid Table 1 Light Accent 2;\lsdpriority47 \lsdlocked0 Grid Table 2 Accent 2;\lsdpriority48 \lsdlocked0 Grid Table 3 Accent 2;
\lsdpriority49 \lsdlocked0 Grid Table 4 Accent 2;\lsdpriority50 \lsdlocked0 Grid Table 5 Dark Accent 2;\lsdpriority51 \lsdlocked0 Grid Table 6 Colorful Accent 2;\lsdpriority52 \lsdlocked0 Grid Table 7 Colorful Accent 2;
\lsdpriority46 \lsdlocked0 Grid Table 1 Light Accent 3;\lsdpriority47 \lsdlocked0 Grid Table 2 Accent 3;\lsdpriority48 \lsdlocked0 Grid Table 3 Accent 3;\lsdpriority49 \lsdlocked0 Grid Table 4 Accent 3;
\lsdpriority50 \lsdlocked0 Grid Table 5 Dark Accent 3;\lsdpriority51 \lsdlocked0 Grid Table 6 Colorful Accent 3;\lsdpriority52 \lsdlocked0 Grid Table 7 Colorful Accent 3;\lsdpriority46 \lsdlocked0 Grid Table 1 Light Accent 4;
\lsdpriority47 \lsdlocked0 Grid Table 2 Accent 4;\lsdpriority48 \lsdlocked0 Grid Table 3 Accent 4;\lsdpriority49 \lsdlocked0 Grid Table 4 Accent 4;\lsdpriority50 \lsdlocked0 Grid Table 5 Dark Accent 4;
\lsdpriority51 \lsdlocked0 Grid Table 6 Colorful Accent 4;\lsdpriority52 \lsdlocked0 Grid Table 7 Colorful Accent 4;\lsdpriority46 \lsdlocked0 Grid Table 1 Light Accent 5;\lsdpriority47 \lsdlocked0 Grid Table 2 Accent 5;
\lsdpriority48 \lsdlocked0 Grid Table 3 Accent 5;\lsdpriority49 \lsdlocked0 Grid Table 4 Accent 5;\lsdpriority50 \lsdlocked0 Grid Table 5 Dark Accent 5;\lsdpriority51 \lsdlocked0 Grid Table 6 Colorful Accent 5;
\lsdpriority52 \lsdlocked0 Grid Table 7 Colorful Accent 5;\lsdpriority46 \lsdlocked0 Grid Table 1 Light Accent 6;\lsdpriority47 \lsdlocked0 Grid Table 2 Accent 6;\lsdpriority48 \lsdlocked0 Grid Table 3 Accent 6;
\lsdpriority49 \lsdlocked0 Grid Table 4 Accent 6;\lsdpriority50 \lsdlocked0 Grid Table 5 Dark Accent 6;\lsdpriority51 \lsdlocked0 Grid Table 6 Colorful Accent 6;\lsdpriority52 \lsdlocked0 Grid Table 7 Colorful Accent 6;
\lsdpriority46 \lsdlocked0 List Table 1 Light;\lsdpriority47 \lsdlocked0 List Table 2;\lsdpriority48 \lsdlocked0 List Table 3;\lsdpriority49 \lsdlocked0 List Table 4;\lsdpriority50 \lsdlocked0 List Table 5 Dark;
\lsdpriority51 \lsdlocked0 List Table 6 Colorful;\lsdpriority52 \lsdlocked0 List Table 7 Colorful;\lsdpriority46 \lsdlocked0 List Table 1 Light Accent 1;\lsdpriority47 \lsdlocked0 List Table 2 Accent 1;\lsdpriority48 \lsdlocked0 List Table 3 Accent 1;
\lsdpriority49 \lsdlocked0 List Table 4 Accent 1;\lsdpriority50 \lsdlocked0 List Table 5 Dark Accent 1;\lsdpriority51 \lsdlocked0 List Table 6 Colorful Accent 1;\lsdpriority52 \lsdlocked0 List Table 7 Colorful Accent 1;
\lsdpriority46 \lsdlocked0 List Table 1 Light Accent 2;\lsdpriority47 \lsdlocked0 List Table 2 Accent 2;\lsdpriority48 \lsdlocked0 List Table 3 Accent 2;\lsdpriority49 \lsdlocked0 List Table 4 Accent 2;
\lsdpriority50 \lsdlocked0 List Table 5 Dark Accent 2;\lsdpriority51 \lsdlocked0 List Table 6 Colorful Accent 2;\lsdpriority52 \lsdlocked0 List Table 7 Colorful Accent 2;\lsdpriority46 \lsdlocked0 List Table 1 Light Accent 3;
\lsdpriority47 \lsdlocked0 List Table 2 Accent 3;\lsdpriority48 \lsdlocked0 List Table 3 Accent 3;\lsdpriority49 \lsdlocked0 List Table 4 Accent 3;\lsdpriority50 \lsdlocked0 List Table 5 Dark Accent 3;
\lsdpriority51 \lsdlocked0 List Table 6 Colorful Accent 3;\lsdpriority52 \lsdlocked0 List Table 7 Colorful Accent 3;\lsdpriority46 \lsdlocked0 List Table 1 Light Accent 4;\lsdpriority47 \lsdlocked0 List Table 2 Accent 4;
\lsdpriority48 \lsdlocked0 List Table 3 Accent 4;\lsdpriority49 \lsdlocked0 List Table 4 Accent 4;\lsdpriority50 \lsdlocked0 List Table 5 Dark Accent 4;\lsdpriority51 \lsdlocked0 List Table 6 Colorful Accent 4;
\lsdpriority52 \lsdlocked0 List Table 7 Colorful Accent 4;\lsdpriority46 \lsdlocked0 List Table 1 Light Accent 5;\lsdpriority47 \lsdlocked0 List Table 2 Accent 5;\lsdpriority48 \lsdlocked0 List Table 3 Accent 5;
\lsdpriority49 \lsdlocked0 List Table 4 Accent 5;\lsdpriority50 \lsdlocked0 List Table 5 Dark Accent 5;\lsdpriority51 \lsdlocked0 List Table 6 Colorful Accent 5;\lsdpriority52 \lsdlocked0 List Table 7 Colorful Accent 5;
\lsdpriority46 \lsdlocked0 List Table 1 Light Accent 6;\lsdpriority47 \lsdlocked0 List Table 2 Accent 6;\lsdpriority48 \lsdlocked0 List Table 3 Accent 6;\lsdpriority49 \lsdlocked0 List Table 4 Accent 6;
\lsdpriority50 \lsdlocked0 List Table 5 Dark Accent 6;\lsdpriority51 \lsdlocked0 List Table 6 Colorful Accent 6;\lsdpriority52 \lsdlocked0 List Table 7 Colorful Accent 6;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Mention;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Smart Hyperlink;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Hashtag;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Unresolved Mention;}}{\*\datastore 010500000200000018000000
4d73786d6c322e534158584d4c5265616465722e362e3000000000000000000000060000
d0cf11e0a1b11ae1000000000000000000000000000000003e000300feff090006000000000000000000000001000000010000000000000000100000feffffff00000000feffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffdfffffffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffff52006f006f007400200045006e00740072007900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000016000500ffffffffffffffffffffffff0c6ad98892f1d411a65f0040963251e50000000000000000000000002012
9acbd485d401feffffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff00000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff0000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000105000000000000}}